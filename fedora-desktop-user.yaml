---
- hosts: localhost
  vars:
    version: "{{ ansible_distribution_major_version }}"
    install_prefix: "{{ ansible_user_dir }}/.local"
    config_prefix: "{{ ansible_user_dir }}/.config"
    code_dir: "{{ ansible_user_dir }}/Code"
    gnome_src: "{{ code_dir }}/gnome/src"
    gnome_build: "{{ code_dir }}/gnome/build"
    gh_mattiasb: git@github.com:mattiasb

  tasks:
    - name: Fetch .local/bin
      tags:
        - fetch
        - update
        - localbin
      git:
        repo: "{{ gh_mattiasb }}/.local-bin.git"
        dest: "{{ ansible_user_dir }}/.local/bin"
        version: master

    - name: Init Config Git Directory
      tags:
        - fetch
        - config
      command: git clone-here "{{ gh_mattiasb }}/.config.git"
      args:
        chdir: "{{ config_prefix }}"
        creates: "{{ config_prefix }}/.gitignore"

    - name: Fetch Config
      tags:
        - fetch
        - update
        - config
      git:
        repo: "{{ gh_mattiasb }}/.config.git"
        dest: "{{ config_prefix }}"
        version: master
      register: fetch_config

    - name: Link Configuration files
      tags:
        - setup
        - config
      file:
        src: "{{ config_prefix }}/{{ item.src | default(omit) }}"
        dest: "{{ ansible_user_dir }}/{{ item.dest }}"
        state: "{{ item.state }}"
      with_items:
        - dest: .bashrc
          state: absent
        - src: bash/rc
          dest: .bashrc
          state: link

        - dest: .bash_profile
          state: absent
        - src: bash/profile
          dest: .bash_profile
          state: link

        - dest: .bash_logout
          state: absent
        - src: bash/logout
          dest: .bash_logout
          state: link

        - dest: .rpmmacros
          state: absent
        - src: rpm/macros
          dest: .rpmmacros
          state: link

    - name: Update NPM Packages
      tags:
        - update
        - packages
        - npm
      command: npm install -g {{ item }}
      with_items:
        - eslint
        - grunt-cli
        - http-server
        - jake
        - jscs
        - jshint
        - yasel
      environment:
        NPM_CONFIG_USERCONFIG: "{{ config_prefix }}/npm/config"

    - name: Update LUA Packages
      tags:
        - update
        - packages
        - lua
      command: luarocks install {{ item }}
      environment:
        LUAROCKS_CONFIG: "{{ config_prefix }}/luarocks/config.lua"
      with_items:
        - luacheck

    - name: Update go Packages
      tags:
        - update
        - packages
        - go
      command: go get -u {{ item }}
      with_items:
        - github.com/nsf/gocode
        - github.com/dougm/goflymake
        - github.com/rogpeppe/godef
        - github.com/monochromegane/the_platinum_searcher/...
      environment:
        GOBIN: "{{ install_prefix }}/bin"
        GOPATH: "{{ ansible_user_dir }}/Code/go:/usr/share/gocode"

    - name: Update Python Packages
      tags:
        - update
        - packages
        - python
      pip:
        name: "{{ item }}"
        extra_args: --user
        state: latest
      with_items:
        - git-spindle
        - scan-build

    - name: Update Rust Packages
      tags:
        - update
        - packages
        - rust
      command: cargo install {{ item }}
      with_items:
        - racer
        - rustfmt
      args:
        creates: "{{ install_prefix }}/bin/{{ item }}"
      environment:
        CARGO_HOME: "{{ install_prefix }}/share/cargo"
        CARGO_INSTALL_ROOT: "{{ install_prefix }}/"

    - name: Setup rpmdev
      tags:
        - setup
        - rpm
      command: rpmdev-setuptree
      args:
        creates: "{{ ansible_user_dir }}/Code/Fedora/rpmbuild/"

    - name: Setup JHBuild Directories
      tags:
        - setup
        - jhbuild
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ gnome_build }}"
        - "{{ gnome_src }}"

    - include: fetch_install.yml
      vars:
        tag: jhbuild
        repo: "https://git.gnome.org/browse/jhbuild"
        dest: "{{ gnome_src }}/jhbuild"
        commands:
          - ./autogen.sh --prefix={{ install_prefix }}
          - make
          - make install

    - include: fetch_install.yml
      vars:
        tag: emacs
        repo: "{{ gh_mattiasb }}/.emacs.d.git"
        dest: "{{ ansible_user_dir }}/.emacs.d"
        commands:
          - make

    - include: fetch_install.yml
      vars:
        tag: git-fpaste
        repo: "{{ gh_mattiasb }}/git-fpaste.git"
        dest: "{{ code_dir }}/Projects/git-fpaste"
        creates: "{{ install_prefix }}/bin/git-fpaste"
        commands:
          - make user-install

    - include: fetch_install.yml
      vars:
        tag: git-each
        repo: git@github.com:tobias-johansson/git-each.git
        dest: "{{ code_dir }}/Projects/git-each"
        creates: "{{ install_prefix }}/bin/git-each"
        commands:
          - make user-install

    - include: fetch_install.yml
      vars:
        tag: git-wip
        repo: "{{ gh_mattiasb }}/git-wip.git"
        dest: "{{ code_dir }}/Projects/git-wip"
        creates: "{{ install_prefix }}/bin/git-wip"
        commands:
          - make user-install
      
    ## TODO:
    #  - Install RTags
